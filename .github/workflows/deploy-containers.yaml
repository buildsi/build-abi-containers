name: "Deploy Base Containers"

on:
  push:
    branches:
      - main
 
jobs:
  find-commits:
    runs-on: ubuntu-latest
    strategy:
      # Add new testers here. Each tester needs a subfolder in docker, and a
      # Dockerfile that accepts a LIBRARY_VERSION variable
      matrix:
        tester: ["libabigail"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Build and Deploy
        env:
          # Space separated list of versions to build for a named tester
          libabigail_versions: "1.8.2"

          # registry organization
          registry: quay.io/buildsi

        run: |
            git fetch
            printf "Looking for changes in tester ${{ matrix.tester }}\n"
            cd docker/${{ matrix.tester }}
            versions="${{ matrix.tester }}_versions"
            newbuilds=no
            commit=$(git rev-parse HEAD)
            printf "Looking for changed containers with commit $commit\n"
            for dockerfile in $(git diff --name-only HEAD~2 .); do
                printf "Found changed Dockerfile ${dockerfile}\n"
                newbuilds=yes
                filename=$(basename $dockerfile)
                for version in ${!versions}; do                  
                    container=${{ env.registry }}/${{ matrix.tester }}:${version}
                    printf "Building ${dockerfile} with version ${version} to container ${container}\n"  
                    docker build -f ${filename} --build-arg LIBRARY_VERSION=${version} -t ${container} .
                done
            done

            if [ "${newbuilds}" == "yes" ]; then
                docker images
                echo ${{ secrets.DOCKER_PASSWORD }} | docker login quay.io -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
                for version in ${!versions}; do
                    container=${{ env.registry }}/${{ matrix.tester }}:${version}
                    printf "Deploying ${container}\n"
                    docker push ${container}
                done
            else
                printf "No new builds\n"
            fi
